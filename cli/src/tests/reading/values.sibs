("one")
("one"; "two");
("one"; "two"; "three");
("on\;e"; "\;two"; "thre\;e");
("one");
("one"; "two");
("one"; "two"; "three");
($one);
($one; $two);
($one; $two; $three);
(:one; :ref; :ref_two);
(one());
(one(); two());
(one(); two(); three());
(one(arg));
(one(arg; arg); two());
(one(); two(); three(arg; arg));
(one());
("one"; two());
(one(); $two; "three");
(one(); :ref; :ref_two);
(:ref; :ref_two; one());
("Value1"; "Value2"; functionA());
(functionB(); `commandA`; "Pattern {$string}");
(10; 20; 30);
(true; false; is_valid());
($var1; $var2; get_value());
("Nested {$inside}"; nested_function());
(if $var {"True";} else {"False";}; 42);
(`command_with {$injection}`; functionC(); 100);
($var3 == "check"; compare($var4; $var5); "Result");
(if $var6 {"Yes";} else {"No";}; result_function());
("String"; if check_condition() {"Condition met";});
(calculate(1; 2); "String with {$variable}");
($numericVar; functionD("arg"); "End");
("Start"; if if_check() {"Passed";} else {"Failed";});
(get_status(); 200; "HTTP OK");
("Level1"; ("Level2"; "Level3"; deep_function()); $deepVar);
(outer_function(); (`inner_command`); "Inner string");
($integer1 < $integer2; 50 > 10; comparison_function());
("Multiple {$nesting}"; complex_function());
(array_function(); (1; 2; 3); "Array inside");
("Mixed types"; true; mixed_function());
(single_value(); "Single"; `single_command`);
("Just strings"; "Another string"; "String again");
(just_function(); another_function(); "Function string");
(`just_command`; `another_command`; "Command string");
(100; 200; "Integer values");
(true; false; "Boolean values");
("Pattern {$nested}"; pattern_function());
(value_check() == "OK"; "Check"; $varCheck);
(if $varStatus {"Active";} else {"Inactive";}; "Status check");
("Start"; start_function(); if $startCondition {"Go";});
(`start_command`; "Command start"; command_function());
("Variable {$varName}"; $varValue; variable_function());
(integer_function(1; 2); 300; "Integer with function");
("Boolean {expression()}"; boolean_expression(); false);
(complex_scenario(); "Scenario result"; if $scenarioCondition {"True case";});
("Nested functions"; outer(inner("arg")); "After function");
(check_value($valueToCheck); "Value checked"; `check_command`);
("Final value"; final_function(); if $finalCondition {"True final";});
(true != false; func(true != false))